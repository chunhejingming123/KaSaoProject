package com.kasao.qintai.dialoge;import android.app.Activity;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.drawable.ColorDrawable;import android.text.TextUtils;import android.view.Gravity;import android.view.KeyEvent;import android.view.View;import android.widget.FrameLayout;import android.widget.PopupWindow;import android.widget.RelativeLayout;import com.kasao.qintai.R;import com.tencent.mm.opensdk.modelmsg.SendMessageToWX;import com.tencent.mm.opensdk.modelmsg.WXMediaMessage;import com.tencent.mm.opensdk.modelmsg.WXMiniProgramObject;import com.tencent.mm.opensdk.modelmsg.WXWebpageObject;import com.tencent.mm.opensdk.openapi.IWXAPI;import com.tencent.mm.opensdk.openapi.WXAPIFactory;import java.net.URL;/** * @auth lipf on 2015/1/22. */public class ShareDialog implements View.OnClickListener {    private static PopupWindow mPopupWindow;    private View mWechatMoments;// 微信好友    private View mWechat;//朋友圈    private FrameLayout mRootView;    private View mContentView;    private Activity mContext;    private View viewClose;    private static String shareUrls;    private static ShareDialog mShareDialoge;    private static String shareTitles;    private static String shareImags;    private static String sharecontexts;    public static final String APP_ID = "wx716f5d95a001617e";    private IWXAPI api;    public static ShareDialog getInstanceShareDialoge(Activity context, String url) {        shareUrls = url;        mShareDialoge = new ShareDialog(context);        return mShareDialoge;    }    public static ShareDialog getInstanceShareDialoge(Activity context, String shareTitle, String shareUrl, String sharImag, String shareContext) {        shareTitles = shareTitle;        shareUrls = shareUrl;        shareImags = sharImag;        sharecontexts = shareContext;        mShareDialoge = new ShareDialog(context);        return mShareDialoge;    }    private ShareDialog(Activity context) {        api = WXAPIFactory.createWXAPI(context, APP_ID, false);        api.registerApp(APP_ID);        mContext = context;        View popupView = context.getLayoutInflater().inflate(R.layout.popuwindow_share_view, null);        mPopupWindow = new PopupWindow(popupView, RelativeLayout.LayoutParams.MATCH_PARENT, RelativeLayout.LayoutParams.MATCH_PARENT, true);        mPopupWindow.setOutsideTouchable(true);        mPopupWindow.setTouchable(true);        mPopupWindow.setFocusable(true);        mPopupWindow.setAnimationStyle(R.style.DialogTranslateAnim);        ColorDrawable dw = new ColorDrawable(0xb0000000);        mPopupWindow.setBackgroundDrawable(dw);//new BitmapDrawable(context.getResources(), (Bitmap) null)        mContentView = mPopupWindow.getContentView();        mContentView.setFocusable(true);        mContentView.setFocusableInTouchMode(true);        mPopupWindow.update();        mRootView = (FrameLayout) mContentView.findViewById(R.id.dialog_window_root);        viewClose = mContentView.findViewById(R.id.tv_share_close);        mWechatMoments = mContentView.findViewById(R.id.mWechatMoments);        mWechat = mContentView.findViewById(R.id.mWechat);        mWechat.setOnClickListener(this);        mWechatMoments.setOnClickListener(this);        viewClose.setOnClickListener(this);        mRootView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                dismiss();            }        });        mContentView.setOnKeyListener(new View.OnKeyListener() {            @Override            public boolean onKey(View v, int keyCode, KeyEvent event) {                if (keyCode == KeyEvent.KEYCODE_MENU && event.getRepeatCount() == 0                        && event.getAction() == KeyEvent.ACTION_DOWN) {                    return true;                }                return false;            }        });    }    @Override    public void onClick(View view) {        switch (view.getId()) {            case R.id.tv_share_close:                if (null != mPopupWindow) {                    mPopupWindow.dismiss();                }                break;            case R.id.mWechatMoments:                shareByType(true);                //  mins();                break;            case R.id.mWechat:                //   shareByType(false);                mins();                break;        }    }    public void show() {        if (null != mPopupWindow) {            mPopupWindow.showAtLocation(mContext.getWindow().getDecorView(), Gravity.BOTTOM, 0, 0);        }    }    public void dismiss() {        if (null != mShareDialoge) {            if (null != mPopupWindow) {                mPopupWindow.dismiss();                mShareDialoge = null;            }        }    }    private void shareByType(boolean isTimelineCb) {        WXWebpageObject webPage = new WXWebpageObject();        webPage.webpageUrl = shareUrls;        final WXMediaMessage msg = new WXMediaMessage(webPage);        msg.title = shareTitles;        msg.description = sharecontexts;        try {            Bitmap thumb = null;            Bitmap thumbBmp = null;            if (TextUtils.isEmpty(shareImags)) {                thumbBmp = BitmapFactory.decodeResource(mContext.getResources(), R.drawable.ic_launcher);            } else {                thumb = BitmapFactory.decodeStream(new URL(shareImags).openStream());                thumbBmp = Bitmap.createScaledBitmap(thumb, 120, 150, true);            }            if (thumbBmp == null) {                thumbBmp = BitmapFactory.decodeResource(mContext.getResources(), R.drawable.ic_launcher);            }            //Bitmap回收            thumb.recycle();            msg.setThumbImage(thumbBmp);        } catch (Throwable e) {        }        SendMessageToWX.Req req = new SendMessageToWX.Req();        req.transaction = String.valueOf(System.currentTimeMillis()); // transaction字段用于唯一标识一个请求        req.message = msg;        /**         * 判断是否是朋友圈         */        req.scene = isTimelineCb ? SendMessageToWX.Req.WXSceneTimeline : SendMessageToWX.Req.WXSceneSession;        // 调用api接口发送数据到微信        api.sendReq(req);    }    private void mins() {        WXMiniProgramObject miniProgramObj = new WXMiniProgramObject();        miniProgramObj.webpageUrl = "http://www.qq.com"; // 兼容低版本的网页链接        miniProgramObj.miniprogramType = WXMiniProgramObject.MINIPTOGRAM_TYPE_RELEASE;// 正式版:0，测试版:1，体验版:2        miniProgramObj.userName = "gh_8636d6032d2d";     // 小程序原始id        miniProgramObj.path = "pages/index/carart/carart";            //小程序页面路径        WXMediaMessage msg = new WXMediaMessage(miniProgramObj);        msg.title = "购车找卡嫂，幸福带回家";                    // 小程序消息title        msg.description = "山西钦泰汽贸 卡嫂 祝您购车愉快";        Bitmap bit = BitmapFactory.decodeResource(mContext.getResources(), R.drawable.share_mini);// 小程序消息desc        msg.setThumbImage(bit);                      // 小程序消息封面图片，小于128k        SendMessageToWX.Req req = new SendMessageToWX.Req();        req.transaction = System.currentTimeMillis() + "";        req.message = msg;        req.scene = SendMessageToWX.Req.WXSceneSession;  // 目前支持会话        api.sendReq(req);    }}